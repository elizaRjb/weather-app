@if variable-exists(font-url--google) {
  @import url($font-url--google);
}

//Calculate rem values
@function rem($size) {
  @return ($size/$base__font-size) * 1rem;
}

//Calculate %age values
@function pntg($target, $context) {
  @return ($target/$context) * 100%;
}

//Mixins
@mixin bg-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      background: $color;
    }
  }
}

//BEM(Block Element Modifier) Naming Convention
//For Element
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

//For Modifiers
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// Media Queries
// $break  - RWD break point values, change them in _config.scss. Default: bootstrap grid
// @usage  - `.Nav {@include mq(sm) {...}}`
@mixin mq($break) {
  @if $break == 'xs' {
    //lowest breakpoint value
    @content;
  } @else if $break == 'sm' {
    // phone
    @media (min-width: $sm-device) {
      @content;
    }
  } @else if $break == 'md' {
    // tablet
    @media (min-width: $md-device) {
      @content;
    }
  } @else if $break == 'lg' {
    // laptop and desktop
    @media (min-width: $lg-device) {
      @content;
    }
  } @else if $break == 'xl' {
    // High res desktop and TVs
    @media (min-width: $xl-device) {
      @content;
    }
  } @else {
    @if (type-of($break) == 'number') {
      @media (min-width: $break + 'px') {
        // browser width >= given breakpoint in number
        @content;
      }
    } @else {
      @error "No value could be retrieved for '#{$break}'";
    }
  }
}

@mixin ellipsis($width) {
  @extend %ellipsis;
  width: $width;
}

//Pseudo-elements
@mixin psuedo-el($el, $el-width: null, $el-height: null) {
  @if $el== ':before' or $el== 'after' {
    &:#{$el} {
      @extend %pseudos;
      width: $el-width;
      height: $el-height;
      @content;
    }
  } @else {
    @warn "#{$el} is not a valid pseudo-element";
  }
}

//Set Background
@mixin bg($img, $repeat: no-repeat, $position: 0 0, $size: cover) {
  background-image: url('#{$path--rel}/#{$img}');
  background-repeat: $repeat;
  background-position: $position;
  background-size: $size;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
